# -*- coding: utf-8 -*-
# Generated by Django 1.10.dev20160517112445 on 2016-05-17 09:21
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import nnmware.core.abstract


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('money', '__first__'),
        ('address', '0002_auto_20160517_0917'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('business', '__first__'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Basket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(blank=True, null=True, verbose_name='Updated date')),
                ('quantity', models.IntegerField(verbose_name='Quantity')),
                ('session_key', models.CharField(blank=True, max_length=40, verbose_name='Session key')),
                ('addon', models.CharField(blank=True, default='', max_length=255, verbose_name='Add-on text')),
            ],
            options={
                'verbose_name': 'Basket',
                'verbose_name_plural': 'Baskets',
            },
        ),
        migrations.CreateModel(
            name='DeliveryAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zipcode', models.CharField(blank=True, max_length=20, verbose_name='Zipcode')),
                ('street', models.CharField(blank=True, default='', max_length=255, verbose_name='Street')),
                ('house_number', models.CharField(blank=True, default='', max_length=5, verbose_name='Number of house')),
                ('building', models.CharField(blank=True, default='', max_length=5, verbose_name='Building')),
                ('flat_number', models.CharField(blank=True, default='', max_length=5, verbose_name='Number of flat')),
                ('first_name', models.CharField(blank=True, default='', max_length=255, verbose_name='First Name')),
                ('middle_name', models.CharField(blank=True, default='', max_length=255, verbose_name='Middle Name')),
                ('last_name', models.CharField(blank=True, default='', max_length=255, verbose_name='Last Name')),
                ('phone', models.CharField(blank=True, default='', max_length=20, verbose_name='Phone')),
                ('skype', models.CharField(blank=True, default='', max_length=50, verbose_name='Skype')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deliveryaddress_cit', to='address.City', verbose_name='City')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deliveryaddress_cou', to='address.Country', verbose_name='Country')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deliveryaddress_reg', to='address.Region', verbose_name='Region')),
                ('stationmetro', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deliveryaddress_metro', to='address.StationMetro', verbose_name='Station of metro')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveryaddr', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Delivery Address',
                'verbose_name_plural': 'Delivery Addresses',
            },
        ),
        migrations.CreateModel(
            name='DeliveryMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(db_index=True, decimal_places=5, default=0, max_digits=22, verbose_name='Amount')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='Name of delivery method')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='Name of delivery method(English)')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description of delivery method')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description of delivery method(English)')),
                ('enabled_for_registered', models.BooleanField(default=False, verbose_name='Enabled for registered users')),
                ('enabled_for_unregistered', models.BooleanField(default=False, verbose_name='Enabled for unregistered users')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='money.Currency', verbose_name='Currency')),
            ],
            options={
                'verbose_name': 'Delivery method',
                'verbose_name_plural': 'Delivery methods',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('user_agent', models.CharField(blank=True, default='', max_length=255, verbose_name='User Agent')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created date')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='Name')),
                ('email', models.CharField(blank=True, default='', max_length=255, verbose_name='Email')),
                ('message', models.TextField(verbose_name='Message')),
                ('answer', models.TextField(blank=True, verbose_name='Answer')),
                ('buyer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedback_buyer', to=settings.AUTH_USER_MODEL, verbose_name='Buyer')),
                ('seller', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedback_seller', to=settings.AUTH_USER_MODEL, verbose_name='Seller')),
            ],
            options={
                'verbose_name': 'Feedback',
                'ordering': ['-created_date'],
                'verbose_name_plural': 'Feedback',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(blank=True, null=True, verbose_name='Updated date')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('user_agent', models.CharField(blank=True, default='', max_length=255, verbose_name='User Agent')),
                ('comment', models.TextField(blank=True, default='', verbose_name='Shipping comment')),
                ('status', models.IntegerField(choices=[(0, 'Unknown'), (1, 'Wait'), (2, 'Process'), (3, 'Sent'), (4, 'Cancel'), (5, 'Closed'), (6, 'Undo'), (7, 'Shipping')], default=0, verbose_name='Status')),
                ('address', models.CharField(blank=True, default='', max_length=255, verbose_name='Shipping address')),
                ('tracknumber', models.CharField(blank=True, default='', max_length=255, verbose_name='Track number')),
                ('first_name', models.CharField(blank=True, default='', max_length=255, verbose_name='First Name')),
                ('middle_name', models.CharField(blank=True, default='', max_length=255, verbose_name='Middle Name')),
                ('last_name', models.CharField(blank=True, default='', max_length=255, verbose_name='Last Name')),
                ('lite', models.BooleanField(default=True, verbose_name='Not register shop user')),
                ('phone', models.CharField(blank=True, default='', max_length=255, verbose_name='Phone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('buyer_comment', models.CharField(blank=True, default='', max_length=255, verbose_name='Buyer comment')),
                ('seller_comment', models.CharField(blank=True, default='', max_length=255, verbose_name='Seller comment')),
                ('session_key', models.CharField(blank=True, max_length=40, verbose_name='Session key')),
                ('delivery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.DeliveryMethod', verbose_name='Delivery method')),
                ('seller', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Seller')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Order',
                'ordering': ['-created_date'],
                'verbose_name_plural': 'Orders',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(db_index=True, decimal_places=5, default=0, max_digits=22, verbose_name='Amount')),
                ('product_pn', models.CharField(blank=True, default='', max_length=255, verbose_name='Shop part number')),
                ('product_name', models.CharField(blank=True, default='', max_length=255, verbose_name='Product Name')),
                ('product_url', models.CharField(blank=True, default='', max_length=255, verbose_name='Product URL')),
                ('quantity', models.PositiveIntegerField(verbose_name='Quantity')),
                ('addon', models.CharField(blank=True, default='', max_length=255, verbose_name='Add-on text')),
                ('is_delivery', models.BooleanField(default=False, verbose_name='Delivery flag')),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='money.Currency', verbose_name='Currency')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.Order')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ParameterUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name of unit')),
            ],
            options={
                'verbose_name': 'Unit',
                'verbose_name_plural': 'Units',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(blank=True, null=True, verbose_name='Updated date')),
                ('teaser', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='Teaser')),
                ('teaser_en', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='Teaser(English)')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
                ('amount', models.DecimalField(db_index=True, decimal_places=5, default=0, max_digits=22, verbose_name='Amount')),
                ('quantity', models.IntegerField(blank=True, default=0, verbose_name='Quantity')),
                ('shop_pn', models.CharField(blank=True, max_length=100, verbose_name='Shop part number')),
                ('vendor_pn', models.CharField(blank=True, max_length=100, verbose_name='Vendor part number')),
                ('avail', models.BooleanField(default=False, verbose_name='Available for order')),
                ('latest', models.BooleanField(default=False, verbose_name='Latest product')),
                ('bestseller', models.BooleanField(default=False, verbose_name='Bestseller')),
                ('discount', models.BooleanField(default=False, verbose_name='Discount')),
                ('on_main', models.BooleanField(default=False, verbose_name='On main page')),
                ('visible', models.BooleanField(default=True, verbose_name='Visible')),
                ('special_offer', models.BooleanField(default=False, verbose_name='Special offer')),
                ('discount_percent', models.DecimalField(blank=True, decimal_places=1, default=0, max_digits=4, null=True, verbose_name='Percent of discount')),
                ('width', models.IntegerField(blank=True, default=0, verbose_name='Width, sm')),
                ('height', models.IntegerField(blank=True, default=0, verbose_name='Height, sm')),
                ('depth', models.IntegerField(blank=True, default=0, verbose_name='Depth, sm')),
                ('weight', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=20, verbose_name='Weight, kg')),
                ('maincat', models.CharField(blank=True, default='', max_length=255, verbose_name='Main category')),
                ('maincatid', models.IntegerField(blank=True, default=0, verbose_name='Main category id')),
                ('admins', models.ManyToManyField(blank=True, related_name='product_adm', to=settings.AUTH_USER_MODEL, verbose_name='Product Admins')),
            ],
            options={
                'verbose_name': 'Product',
                'ordering': ['-created_date'],
                'verbose_name_plural': 'Products',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
                ('rootnode', models.BooleanField(default=False, verbose_name='Root node')),
                ('login_required', models.BooleanField(default=False, help_text='Enable this if users must login before access with this objects.', verbose_name='Login required')),
                ('admins', models.ManyToManyField(blank=True, related_name='shop_productcategory_adm', to=settings.AUTH_USER_MODEL, verbose_name='Category Admins')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='shop.ProductCategory', verbose_name='Parent')),
            ],
            options={
                'verbose_name': 'Product Category',
                'ordering': ['parent__id'],
                'verbose_name_plural': 'Product Categories',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='ProductColor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Color',
                'verbose_name_plural': 'Colors',
                'abstract': False,
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='ProductMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Material',
                'verbose_name_plural': 'Materials',
                'abstract': False,
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='ProductParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name of parameter')),
            ],
            options={
                'verbose_name': 'Product parameter',
                'verbose_name_plural': 'Product parameters',
            },
        ),
        migrations.CreateModel(
            name='ProductParameterCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Category of parameter')),
            ],
            options={
                'verbose_name': 'Category of product parameter',
                'verbose_name_plural': 'Categories of product parameters',
            },
        ),
        migrations.CreateModel(
            name='ProductParameterValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='object ID')),
                ('primary', models.BooleanField(default=False, verbose_name='Is primary')),
                ('value', models.CharField(blank=True, default='', max_length=255, verbose_name='Value of parameter')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('keyparam', models.BooleanField(default=False, verbose_name='In key params')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_productparametervalue_cntype', to='contenttypes.ContentType')),
                ('parameter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parameter', to='shop.ProductParameter', verbose_name='Parameter')),
            ],
            options={
                'verbose_name': 'Product parameter value',
                'verbose_name_plural': 'Product parameters values',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('user_agent', models.CharField(blank=True, default='', max_length=255, verbose_name='User Agent')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created date')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='Name')),
                ('w_position', models.CharField(blank=True, default='', max_length=255, verbose_name='Position')),
                ('message', models.TextField(blank=True, default='', verbose_name='Message')),
                ('visible', models.BooleanField(default=False, verbose_name='Visible')),
                ('vip', models.BooleanField(default=False, verbose_name='Vip')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Review',
                'ordering': ['-created_date'],
                'verbose_name_plural': 'Reviews',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(blank=True, null=True, verbose_name='Updated date')),
                ('teaser', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='Teaser')),
                ('teaser_en', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='Teaser(English)')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
                ('amount', models.DecimalField(db_index=True, decimal_places=5, default=0, max_digits=22, verbose_name='Amount')),
                ('shop_pn', models.CharField(blank=True, max_length=100, verbose_name='Shop part number')),
                ('vendor_pn', models.CharField(blank=True, max_length=100, verbose_name='Vendor part number')),
                ('avail', models.BooleanField(default=False, verbose_name='Available for order')),
                ('latest', models.BooleanField(default=False, verbose_name='Latest product')),
                ('bestseller', models.BooleanField(default=False, verbose_name='Bestseller')),
                ('discount', models.BooleanField(default=False, verbose_name='Discount')),
                ('on_main', models.BooleanField(default=False, verbose_name='On main page')),
                ('visible', models.BooleanField(default=True, verbose_name='Visible')),
                ('special_offer', models.BooleanField(default=False, verbose_name='Special offer')),
                ('discount_percent', models.DecimalField(blank=True, decimal_places=1, default=0, max_digits=4, null=True, verbose_name='Percent of discount')),
                ('admins', models.ManyToManyField(blank=True, related_name='service_adm', to=settings.AUTH_USER_MODEL, verbose_name='Service Admins')),
            ],
            options={
                'verbose_name': 'Service',
                'ordering': ['-created_date'],
                'verbose_name_plural': 'Services',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
                ('rootnode', models.BooleanField(default=False, verbose_name='Root node')),
                ('login_required', models.BooleanField(default=False, help_text='Enable this if users must login before access with this objects.', verbose_name='Login required')),
                ('admins', models.ManyToManyField(blank=True, related_name='shop_servicecategory_adm', to=settings.AUTH_USER_MODEL, verbose_name='Category Admins')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='shop.ServiceCategory', verbose_name='Parent')),
            ],
            options={
                'verbose_name': 'Service Category',
                'ordering': ['parent__id'],
                'verbose_name_plural': 'Service Categories',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='ShopArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teaser', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='Teaser')),
                ('teaser_en', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='Teaser(English)')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created date')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('content', models.TextField(blank=True, verbose_name='Content')),
                ('enabled', models.BooleanField(default=False, verbose_name='Enabled')),
            ],
            options={
                'verbose_name': 'Shop article',
                'verbose_name_plural': 'Shop articles',
            },
        ),
        migrations.CreateModel(
            name='ShopCallback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('user_agent', models.CharField(blank=True, default='', max_length=255, verbose_name='User Agent')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created date')),
                ('clientname', models.CharField(blank=True, default='', max_length=255, verbose_name='Client Name')),
                ('clientphone', models.CharField(blank=True, default='', max_length=255, verbose_name='Client Phone')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('closed', models.BooleanField(default=False, verbose_name='Closed')),
                ('quickorder', models.BooleanField(default=False, verbose_name='Quick order')),
            ],
            options={
                'verbose_name': 'Shop Callback',
                'ordering': ['-created_date'],
                'verbose_name_plural': 'Shop Callbacks',
            },
        ),
        migrations.CreateModel(
            name='ShopNews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teaser', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='Teaser')),
                ('teaser_en', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='Teaser(English)')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created date')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('content', models.TextField(blank=True, verbose_name='Content')),
                ('enabled', models.BooleanField(default=False, verbose_name='Enabled')),
            ],
            options={
                'verbose_name': 'Shop news',
                'verbose_name_plural': 'Shop news',
            },
        ),
        migrations.CreateModel(
            name='ShopSlider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('visible', models.BooleanField(default=False, verbose_name='Visible')),
                ('slider_link', models.CharField(blank=True, default='', max_length=255, verbose_name='Slider_link')),
            ],
            options={
                'verbose_name': 'ShopSlider',
                'ordering': ['visible'],
                'verbose_name_plural': 'ShopSliders',
            },
        ),
        migrations.CreateModel(
            name='SpecialOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created date')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Start date')),
                ('end_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='End date')),
                ('title', models.CharField(blank=True, default='', max_length=255, verbose_name='Title')),
                ('text', models.TextField(blank=True, verbose_name='Offer text')),
                ('enabled', models.BooleanField(default=False, verbose_name='Enabled')),
                ('slug', models.CharField(blank=True, max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
            ],
            options={
                'verbose_name': 'Special Offer',
                'verbose_name_plural': 'Special Offers',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name of vendor')),
                ('name_en', models.CharField(blank=True, max_length=200, verbose_name='Name of vendor(english)')),
                ('website', models.URLField(blank=True, default='', max_length=150, verbose_name='URL')),
                ('description', models.TextField(blank=True, default='', help_text='Description of Vendor', verbose_name='Description of Vendor')),
            ],
            options={
                'verbose_name': 'Vendor',
                'ordering': ['name', 'website'],
                'verbose_name_plural': 'Vendors',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CargoService',
            fields=[
                ('vendor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shop.Vendor')),
            ],
            options={
                'verbose_name': 'Cargo Service',
                'verbose_name_plural': 'Cargo Services',
            },
            bases=('shop.vendor',),
        ),
        migrations.AddField(
            model_name='vendor',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='address.Country', verbose_name='Country'),
        ),
        migrations.AddField(
            model_name='service',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='servicecat', to='shop.ServiceCategory', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='service',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='business.Company', verbose_name='Company'),
        ),
        migrations.AddField(
            model_name='service',
            name='currency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='money.Currency', verbose_name='Currency'),
        ),
        migrations.AddField(
            model_name='service',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='service_reg', to='address.Region', verbose_name='Region'),
        ),
        migrations.AddField(
            model_name='service',
            name='related_services',
            field=models.ManyToManyField(blank=True, related_name='_service_related_services_+', to='shop.Service', verbose_name='Related services'),
        ),
        migrations.AddField(
            model_name='service',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='productparameter',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='category', to='shop.ProductParameterCategory', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='productparameter',
            name='unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='unit', to='shop.ParameterUnit', verbose_name='Unit'),
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shopcat', to='shop.ProductCategory', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='product',
            name='colors',
            field=models.ManyToManyField(blank=True, to='shop.ProductColor', verbose_name='Colors'),
        ),
        migrations.AddField(
            model_name='product',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='business.Company', verbose_name='Company'),
        ),
        migrations.AddField(
            model_name='product',
            name='currency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='money.Currency', verbose_name='Currency'),
        ),
        migrations.AddField(
            model_name='product',
            name='materials',
            field=models.ManyToManyField(blank=True, to='shop.ProductMaterial', verbose_name='Materials'),
        ),
        migrations.AddField(
            model_name='product',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_reg', to='address.Region', verbose_name='Region'),
        ),
        migrations.AddField(
            model_name='product',
            name='related_products',
            field=models.ManyToManyField(blank=True, related_name='_product_related_products_+', to='shop.Product', verbose_name='Related products'),
        ),
        migrations.AddField(
            model_name='product',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='product',
            name='vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.Vendor', verbose_name='Vendor'),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='product_origin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.Product'),
        ),
        migrations.AddField(
            model_name='basket',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='basket', to='shop.Product', verbose_name='Product'),
        ),
        migrations.AddField(
            model_name='basket',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='basket', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='order',
            name='cargoservice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cargo', to='shop.CargoService', verbose_name='Cargo service'),
        ),
    ]
