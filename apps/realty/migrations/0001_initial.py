# -*- coding: utf-8 -*-
# Generated by Django 1.10.dev20160517112445 on 2016-05-17 09:22
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import nnmware.core.abstract


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('address', '0002_auto_20160517_0917'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('money', '0002_auto_20160517_0922'),
        ('business', '0002_auto_20160517_0922'),
    ]

    operations = [
        migrations.CreateModel(
            name='Compass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('name_en', models.CharField(max_length=100, verbose_name='Name(en)')),
                ('abbreviation', models.CharField(max_length=2, verbose_name='Abbreviation')),
            ],
            options={
                'verbose_name': 'Point of compass',
                'verbose_name_plural': 'Points of compass',
            },
        ),
        migrations.CreateModel(
            name='Estate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(blank=True, null=True, verbose_name='Updated date')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
                ('longitude', models.FloatField(db_index=True, default=0.0, verbose_name='Longitude')),
                ('latitude', models.FloatField(db_index=True, default=0.0, verbose_name='Latitude')),
                ('zipcode', models.CharField(blank=True, max_length=20, verbose_name='Zipcode')),
                ('street', models.CharField(blank=True, default='', max_length=255, verbose_name='Street')),
                ('house_number', models.CharField(blank=True, default='', max_length=5, verbose_name='Number of house')),
                ('building', models.CharField(blank=True, default='', max_length=5, verbose_name='Building')),
                ('flat_number', models.CharField(blank=True, default='', max_length=5, verbose_name='Number of flat')),
                ('amount', models.DecimalField(db_index=True, decimal_places=5, default=0, max_digits=22, verbose_name='Amount')),
                ('contact_email', models.CharField(blank=True, max_length=75, verbose_name='Contact Email')),
                ('contact_name', models.CharField(blank=True, max_length=100, verbose_name='Contact Name')),
                ('contact_phone', models.CharField(blank=True, max_length=100, verbose_name='Contact Phone')),
                ('expiration_date', models.DateTimeField(blank=True, null=True, verbose_name='Date of expiration')),
                ('sold', models.BooleanField(default=False, verbose_name='Sold')),
                ('corporate', models.BooleanField(default=False, verbose_name='Is corporate?')),
                ('gross_size', models.DecimalField(db_index=True, decimal_places=1, default=0, max_digits=10, verbose_name='Gross area size (square meters)')),
                ('live_size', models.DecimalField(db_index=True, decimal_places=1, default=0, max_digits=10, verbose_name='Living space size (square meters)')),
                ('construction_year', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Date of construction')),
                ('housing', models.BooleanField(default=False, verbose_name='Housing')),
                ('location_public', models.BooleanField(default=False, verbose_name='Is location public?')),
                ('total_room', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Total rooms count')),
                ('floor', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Floor')),
                ('total_floor', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Total floor')),
                ('rent', models.BooleanField(default=False, verbose_name='Rent')),
                ('cost_meter', models.DecimalField(db_index=True, decimal_places=3, default=0, max_digits=20, verbose_name='Cost per square meter')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estate_cit', to='address.City', verbose_name='City')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='business.Company', verbose_name='Company')),
                ('compass', models.ManyToManyField(to='realty.Compass', verbose_name='Points of compass')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estate_cou', to='address.Country', verbose_name='Country')),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='money.Currency', verbose_name='Currency')),
            ],
            options={
                'verbose_name': 'Estate',
                'verbose_name_plural': 'Estate',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='EstateFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
                ('internal', models.BooleanField(default=False, verbose_name='Internal')),
                ('external', models.BooleanField(default=False, verbose_name='External')),
            ],
            options={
                'verbose_name': 'Estate feature',
                'verbose_name_plural': 'Estate features',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='EstateType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Estate type',
                'verbose_name_plural': 'Estate types',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='MaterialKind',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Material kind',
                'verbose_name_plural': 'Materials kinds',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='Rm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
                ('size', models.DecimalField(db_index=True, decimal_places=1, default=0, max_digits=10, verbose_name='Space size (square meters)')),
                ('estate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='realty.Estate', verbose_name='Estate')),
            ],
            options={
                'verbose_name': 'Rm',
                'verbose_name_plural': 'Rms',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='RmFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
                ('internal', models.BooleanField(default=False, verbose_name='Internal')),
                ('external', models.BooleanField(default=False, verbose_name='External')),
            ],
            options={
                'verbose_name': 'Rm feature',
                'verbose_name_plural': 'Rm features',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='RmType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
                ('internal', models.BooleanField(default=False, verbose_name='Internal')),
                ('external', models.BooleanField(default=False, verbose_name='External')),
            ],
            options={
                'verbose_name': 'Rm type',
                'verbose_name_plural': 'Rms types',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='TrimKind',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
                ('internal', models.BooleanField(default=False, verbose_name='Internal')),
                ('external', models.BooleanField(default=False, verbose_name='External')),
            ],
            options={
                'verbose_name': 'Trim kind',
                'verbose_name_plural': 'Trims kinds',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.AddField(
            model_name='rm',
            name='features',
            field=models.ManyToManyField(to='realty.RmFeature', verbose_name='Rm features'),
        ),
        migrations.AddField(
            model_name='rm',
            name='kind',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='realty.RmType', verbose_name='Rm type'),
        ),
        migrations.AddField(
            model_name='estate',
            name='exterior',
            field=models.ManyToManyField(related_name='ext_estate', to='realty.TrimKind', verbose_name='Exterior trim kinds'),
        ),
        migrations.AddField(
            model_name='estate',
            name='features',
            field=models.ManyToManyField(to='realty.EstateFeature', verbose_name='Estate features'),
        ),
        migrations.AddField(
            model_name='estate',
            name='interior',
            field=models.ManyToManyField(related_name='int_estate', to='realty.TrimKind', verbose_name='Interior trim kinds'),
        ),
        migrations.AddField(
            model_name='estate',
            name='kind',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='realty.EstateType', verbose_name='Estate type'),
        ),
        migrations.AddField(
            model_name='estate',
            name='materials',
            field=models.ManyToManyField(to='realty.MaterialKind', verbose_name='Materials kinds'),
        ),
        migrations.AddField(
            model_name='estate',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estate_reg', to='address.Region', verbose_name='Region'),
        ),
        migrations.AddField(
            model_name='estate',
            name='stationmetro',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estate_metro', to='address.StationMetro', verbose_name='Station of metro'),
        ),
        migrations.AddField(
            model_name='estate',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
    ]
