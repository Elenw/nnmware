# -*- coding: utf-8 -*-
# Generated by Django 1.10.dev20160517112445 on 2016-05-17 09:21
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import nnmware.core.abstract


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('money', '__first__'),
        ('address', '0002_auto_20160517_0917'),
    ]

    operations = [
        migrations.CreateModel(
            name='AgentPercent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True, verbose_name='From date')),
                ('percent', models.DecimalField(blank=True, db_index=True, decimal_places=1, default=0, max_digits=4, verbose_name='Percent')),
            ],
            options={
                'verbose_name_plural': 'Agent Percents',
                'verbose_name': 'Agent Percent',
                'ordering': ('hotel',),
            },
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True, verbose_name='On date')),
                ('placecount', models.IntegerField(db_index=True, default=0, verbose_name='Count of places')),
                ('min_days', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Minimum days')),
            ],
            options={
                'verbose_name_plural': 'Availabilities Places',
                'verbose_name': 'Availability Place',
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('user_agent', models.CharField(blank=True, default='', max_length=255, verbose_name='User Agent')),
                ('amount', models.DecimalField(db_index=True, decimal_places=5, default=0, max_digits=22, verbose_name='Amount')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Creation date')),
                ('system_id', models.IntegerField(default=0, verbose_name='ID in system')),
                ('from_date', models.DateField(verbose_name='From')),
                ('to_date', models.DateField(verbose_name='To')),
                ('settlement_txt', models.CharField(blank=True, max_length=255, verbose_name='Settlement Variant in text')),
                ('hotel_txt', models.CharField(blank=True, max_length=255, verbose_name='Hotel in text')),
                ('status', models.IntegerField(choices=[(0, 'Unknown'), (1, 'Accepted'), (2, 'Confirmed'), (3, 'Canceled by client'), (4, 'Canceled by hotel'), (5, 'Not arrived'), (6, 'Completed')], default=0, verbose_name='Booking status')),
                ('first_name', models.CharField(max_length=100, verbose_name='First name')),
                ('middle_name', models.CharField(blank=True, max_length=100, verbose_name='Middle name')),
                ('last_name', models.CharField(max_length=100, verbose_name='Last name')),
                ('phone', models.CharField(blank=True, max_length=100, verbose_name='Phone')),
                ('email', models.CharField(blank=True, max_length=100, verbose_name='E-mail')),
                ('uuid', models.CharField(blank=True, editable=False, max_length=64, verbose_name='Unique ID')),
                ('commission', models.DecimalField(decimal_places=3, default=0, max_digits=20, verbose_name='Commission')),
                ('hotel_sum', models.DecimalField(decimal_places=3, default=0, max_digits=20, verbose_name='Hotel Sum')),
                ('card_number', models.CharField(blank=True, max_length=16, verbose_name='Card number')),
                ('card_valid', models.CharField(blank=True, max_length=5, verbose_name='Card valid to')),
                ('card_holder', models.CharField(blank=True, max_length=50, verbose_name='Card holder')),
                ('card_cvv2', models.CharField(blank=True, max_length=4, verbose_name='Card verification value(CVV2)')),
                ('enabled', models.BooleanField(db_index=True, default=False, verbose_name='Enabled')),
                ('guests', models.PositiveSmallIntegerField(db_index=True, default=0, verbose_name='Guests')),
                ('btype', models.IntegerField(choices=[(0, 'Unknown'), (1, 'Unguaranteed booking'), (2, 'Guaranteed booking'), (3, 'Non-return rate')], default=0, verbose_name='Booking type')),
                ('bdiscount', models.PositiveSmallIntegerField(db_index=True, default=0, verbose_name='Discount percent')),
                ('typefood', models.IntegerField(choices=[(0, 'RO - Without breakfast'), (1, 'BB - Breakfast'), (2, 'CB - Continental breakfast'), (3, 'HB - Half board (breakfast and lunch/dinner'), (4, 'FB - Full board (breakfast, lunch, dinner)'), (5, 'AI - All included'), (6, 'AC - A la carte (on menu)'), (7, 'EB - English breakfast'), (8, 'HB+ - Half board + local drinks'), (9, 'FB+ - Full board + local drinks')], db_index=True, null=True, verbose_name='Type of food')),
                ('freecancel', models.PositiveSmallIntegerField(db_index=True, default=0, verbose_name='Free cancel days')),
                ('penaltycancel', models.DecimalField(decimal_places=3, default=0, max_digits=20, verbose_name='Penalty for cancellation')),
                ('comment', models.TextField(blank=True, default='', verbose_name='Client comment')),
                ('amount_no_discount', models.DecimalField(db_index=True, decimal_places=5, default=0, max_digits=22, verbose_name='Amount without discount')),
                ('cancel_time', models.DateTimeField(blank=True, null=True, verbose_name='Time/date of cancellation')),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='money.Currency', verbose_name='Currency')),
            ],
            options={
                'verbose_name_plural': 'Bookings',
                'verbose_name': 'Booking',
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(blank=True, null=True, verbose_name='Updated date')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
                ('choice', models.IntegerField(choices=[(0, 'No discount'), (1, 'Non-return rate'), (2, 'Early booking'), (3, 'Later booking'), (4, 'Booking on nights count'), (5, 'Package discount'), (6, 'Holidays discount'), (7, 'Special discount'), (8, 'Last minute discount'), (9, 'Creditcard booking discount'), (10, 'Normal discount')], db_index=True, default=0, verbose_name='Type of discount')),
                ('days', models.SmallIntegerField(blank=True, null=True, verbose_name='Count of days')),
                ('at_price_days', models.SmallIntegerField(blank=True, null=True, verbose_name='At price of days')),
                ('time_on', models.TimeField(blank=True, null=True, verbose_name='Time on')),
                ('time_off', models.TimeField(blank=True, null=True, verbose_name='Time off')),
                ('percentage', models.BooleanField(db_index=True, default=True, verbose_name='Percentage discount')),
                ('apply_norefund', models.BooleanField(db_index=True, default=False, verbose_name='Apply norefund discount')),
                ('apply_creditcard', models.BooleanField(db_index=True, default=False, verbose_name='Apply creditcard discount')),
                ('apply_package', models.BooleanField(db_index=True, default=False, verbose_name='Apply package discount')),
                ('apply_period', models.BooleanField(db_index=True, default=False, verbose_name='Apply period discount')),
            ],
            options={
                'verbose_name_plural': 'Discounts',
                'verbose_name': 'Discount',
                'ordering': ['-pk'],
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
                ('longitude', models.FloatField(db_index=True, default=0.0, verbose_name='Longitude')),
                ('latitude', models.FloatField(db_index=True, default=0.0, verbose_name='Latitude')),
                ('address', models.CharField(blank=True, default='', max_length=100, verbose_name='Address')),
                ('address_en', models.CharField(blank=True, default='', max_length=100, verbose_name='Address(English)')),
                ('food', models.DecimalField(db_index=True, decimal_places=1, default=0, max_digits=4, verbose_name='Food')),
                ('service', models.DecimalField(db_index=True, decimal_places=1, default=0, max_digits=4, verbose_name='Service')),
                ('purity', models.DecimalField(db_index=True, decimal_places=1, default=0, max_digits=4, verbose_name='Purity')),
                ('transport', models.DecimalField(db_index=True, decimal_places=1, default=0, max_digits=4, verbose_name='Transport')),
                ('prices', models.DecimalField(db_index=True, decimal_places=1, default=0, max_digits=4, verbose_name='Prices')),
                ('register_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Register from')),
                ('email', models.CharField(blank=True, max_length=75, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=100, verbose_name='Phone')),
                ('fax', models.CharField(blank=True, max_length=100, verbose_name='Fax')),
                ('website', models.URLField(blank=True, max_length=150, verbose_name='Website')),
                ('contact_email', models.CharField(blank=True, max_length=75, verbose_name='Contact Email')),
                ('contact_name', models.CharField(blank=True, max_length=100, verbose_name='Contact Name')),
                ('room_count', models.IntegerField(blank=True, default=0, verbose_name='Count of Rooms')),
                ('starcount', models.IntegerField(choices=[(-10, 'Unknown'), (-2, 'Hostel'), (-1, 'Apartaments'), (0, 'Mini-hotel'), (1, 'One star'), (2, 'Two star'), (3, 'Three star'), (4, 'Four star'), (5, 'Five star')], db_index=True, default=-10, verbose_name='Count of Stars')),
                ('choice', models.IntegerField(choices=[(0, 'Unknown'), (1, 'Hotel'), (2, 'Cottage'), (3, 'Home'), (4, 'Flat')], db_index=True, default=1, editable=False, verbose_name='Type of Hotel')),
                ('point', models.DecimalField(db_index=True, decimal_places=1, default=0, editable=False, max_digits=4, verbose_name='Point of hotel')),
                ('best_offer', models.BooleanField(db_index=True, default=False, verbose_name='Best offer')),
                ('in_top10', models.BooleanField(db_index=True, default=False, verbose_name='In top 10')),
                ('current_amount', models.DecimalField(db_index=True, decimal_places=3, default=0, max_digits=20, verbose_name='Current amount')),
                ('booking_terms', models.TextField(blank=True, verbose_name='Booking terms')),
                ('schema_transit', models.TextField(blank=True, verbose_name='Schema of transit')),
                ('booking_terms_en', models.TextField(blank=True, verbose_name='Booking terms(English)')),
                ('schema_transit_en', models.TextField(blank=True, verbose_name='Schema of transit(English)')),
                ('updated_date', models.DateTimeField(blank=True, null=True, verbose_name='Updated date')),
                ('condition_cancellation', models.TextField(blank=True, verbose_name='Condition cancellation')),
                ('condition_cancellation_en', models.TextField(blank=True, verbose_name='Condition cancellation(English)')),
                ('paid_services', models.TextField(blank=True, verbose_name='Paid services')),
                ('paid_services_en', models.TextField(blank=True, verbose_name='Paid services(English)')),
                ('time_on', models.CharField(blank=True, max_length=5, verbose_name='Time on')),
                ('time_off', models.CharField(blank=True, max_length=5, verbose_name='Time off')),
                ('work_on_request', models.BooleanField(db_index=True, default=False, verbose_name='Work on request')),
                ('addon_city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='main_city', to='address.City', verbose_name='Main city')),
                ('admins', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='Hotel Admins')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='address.City', verbose_name='City')),
            ],
            options={
                'verbose_name_plural': 'Hotels',
                'verbose_name': 'Hotel',
                'ordering': ('name',),
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='HotelOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
                ('in_search', models.BooleanField(db_index=True, default=False, verbose_name='In search form?')),
                ('sticky_in_search', models.BooleanField(db_index=True, default=False, verbose_name='Sticky in search form?')),
            ],
            options={
                'verbose_name_plural': 'Hotel Options',
                'verbose_name': 'Hotel Option',
                'ordering': ['category', 'position', 'name'],
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='HotelOptionCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
                ('icon', models.ImageField(blank=True, upload_to='ico/')),
            ],
            options={
                'verbose_name_plural': 'Hotel Option Categories',
                'verbose_name': 'Hotel Option Category',
                'ordering': ['position'],
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='HotelSearch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('user_agent', models.CharField(blank=True, default='', max_length=255, verbose_name='User Agent')),
                ('date', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='Creation date')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='City')),
                ('hotel', models.CharField(blank=True, max_length=100, verbose_name='Hotel')),
                ('from_date', models.DateField(verbose_name='From')),
                ('to_date', models.DateField(verbose_name='To')),
                ('guests', models.PositiveSmallIntegerField(db_index=True, default=0, verbose_name='Guests')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Searched parameters',
                'verbose_name': 'Search parameters',
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='HotelType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Hotel types',
                'verbose_name': 'Hotel type',
                'ordering': ('name',),
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
                ('use_card', models.BooleanField(db_index=True, default=False, verbose_name='Use credit card?')),
            ],
            options={
                'verbose_name_plural': 'Payment methods',
                'verbose_name': 'Payment method',
                'ordering': ('name',),
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='PlacePrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(db_index=True, decimal_places=5, default=0, max_digits=22, verbose_name='Amount')),
                ('date', models.DateField(db_index=True, verbose_name='On date')),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='money.Currency', verbose_name='Currency')),
            ],
            options={
                'verbose_name_plural': 'Places Prices',
                'verbose_name': 'Place Price',
            },
        ),
        migrations.CreateModel(
            name='RequestAddHotel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('user_agent', models.CharField(blank=True, default='', max_length=255, verbose_name='User Agent')),
                ('register_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Register date')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='City')),
                ('address', models.CharField(blank=True, max_length=100, verbose_name='Address')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='Name')),
                ('email', models.CharField(blank=True, max_length=100, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=100, verbose_name='Phone')),
                ('fax', models.CharField(blank=True, max_length=100, verbose_name='Fax')),
                ('contact_email', models.CharField(blank=True, max_length=100, verbose_name='Contact email')),
                ('website', models.CharField(blank=True, max_length=100, verbose_name='Website')),
                ('rooms_count', models.CharField(blank=True, max_length=100, verbose_name='Count of rooms')),
                ('starcount', models.IntegerField(choices=[(-10, 'Unknown'), (-2, 'Hostel'), (-1, 'Apartaments'), (0, 'Mini-hotel'), (1, 'One star'), (2, 'Two star'), (3, 'Three star'), (4, 'Four star'), (5, 'Five star')], default=-10, verbose_name='Count of Stars')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Requests for add hotels',
                'verbose_name': 'Request for add hotel',
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('user_agent', models.CharField(blank=True, default='', max_length=255, verbose_name='User Agent')),
                ('food', models.DecimalField(db_index=True, decimal_places=1, default=0, max_digits=4, verbose_name='Food')),
                ('service', models.DecimalField(db_index=True, decimal_places=1, default=0, max_digits=4, verbose_name='Service')),
                ('purity', models.DecimalField(db_index=True, decimal_places=1, default=0, max_digits=4, verbose_name='Purity')),
                ('transport', models.DecimalField(db_index=True, decimal_places=1, default=0, max_digits=4, verbose_name='Transport')),
                ('prices', models.DecimalField(db_index=True, decimal_places=1, default=0, max_digits=4, verbose_name='Prices')),
                ('date', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='Published by')),
                ('review', models.TextField(blank=True, verbose_name='Review')),
                ('username', models.CharField(max_length=100, verbose_name='Guest username')),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='booking.Booking')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Hotel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Client reviews',
                'verbose_name': 'Client review',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
                ('places', models.IntegerField(choices=[(0, 'Unknown'), (1, 'One'), (2, 'Two'), (3, 'Three'), (4, 'Four'), (5, 'Five'), (6, 'Six'), (7, 'Seven'), (8, 'Eight')], db_index=True, default=0, verbose_name='Place Count')),
                ('typefood', models.IntegerField(choices=[(0, 'RO - Without breakfast'), (1, 'BB - Breakfast'), (2, 'CB - Continental breakfast'), (3, 'HB - Half board (breakfast and lunch/dinner'), (4, 'FB - Full board (breakfast, lunch, dinner)'), (5, 'AI - All included'), (6, 'AC - A la carte (on menu)'), (7, 'EB - English breakfast'), (8, 'HB+ - Half board + local drinks'), (9, 'FB+ - Full board + local drinks')], db_index=True, default=0, verbose_name='Type of food')),
                ('surface_area', models.PositiveSmallIntegerField(db_index=True, default=0, verbose_name='Surface area (m2)')),
                ('hotel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='booking.Hotel', verbose_name='Hotel')),
            ],
            options={
                'verbose_name_plural': 'Rooms',
                'verbose_name': 'Room',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='RoomDiscount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True, verbose_name='On date')),
                ('value', models.DecimalField(db_index=True, decimal_places=3, default=0, max_digits=20, verbose_name='Value of discount')),
                ('discount', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Discount', verbose_name="Discount of hotel's")),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Room', verbose_name="Room of hotel's")),
            ],
            options={
                'verbose_name_plural': 'Room discounts',
                'verbose_name': 'Room discount',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='RoomOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
                ('in_search', models.BooleanField(db_index=True, default=False, verbose_name='In search form?')),
            ],
            options={
                'verbose_name_plural': 'Room Options',
                'verbose_name': 'Room Option',
                'ordering': ['position', 'name'],
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='RoomOptionCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Room Option Categories',
                'verbose_name': 'Room Option Category',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='SettlementVariant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('settlement', models.PositiveSmallIntegerField(db_index=True, verbose_name='Settlement')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Room', verbose_name='Room')),
            ],
            options={
                'verbose_name_plural': 'Settlements Variants',
                'verbose_name': 'Settlement Variant',
            },
        ),
        migrations.CreateModel(
            name='SimpleDiscount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ub', models.BooleanField(db_index=True, default=False, verbose_name='Unguaranteed booking enabled')),
                ('ub_discount', models.PositiveSmallIntegerField(db_index=True, default=0, verbose_name='Discount ub')),
                ('gb', models.BooleanField(db_index=True, default=False, verbose_name='Guaranteed booking enabled')),
                ('gb_days', models.PositiveSmallIntegerField(db_index=True, default=0, verbose_name='Free cancel gb days')),
                ('gb_penalty', models.PositiveSmallIntegerField(db_index=True, default=0, verbose_name='Penalty for gb cancel')),
                ('gb_discount', models.PositiveSmallIntegerField(db_index=True, default=0, verbose_name='Discount gb')),
                ('nr', models.BooleanField(db_index=True, default=False, verbose_name='Non-return rate enabled')),
                ('nr_discount', models.PositiveSmallIntegerField(db_index=True, default=0, verbose_name='Discount nr')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Room', verbose_name="Room of hotel's")),
            ],
            options={
                'verbose_name_plural': 'Simple room discounts',
                'verbose_name': 'Simple room discount',
                'ordering': ['-pk'],
            },
        ),
        migrations.AddField(
            model_name='roomoption',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.RoomOptionCategory', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='room',
            name='option',
            field=models.ManyToManyField(blank=True, to='booking.RoomOption', verbose_name='Availability options'),
        ),
        migrations.AddField(
            model_name='placeprice',
            name='settlement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.SettlementVariant', verbose_name='Settlement Variant'),
        ),
        migrations.AddField(
            model_name='hoteloption',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.HotelOptionCategory', verbose_name='Category option'),
        ),
        migrations.AddField(
            model_name='hotel',
            name='hoteltype',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='booking.HotelType', verbose_name='Hotel type'),
        ),
        migrations.AddField(
            model_name='hotel',
            name='option',
            field=models.ManyToManyField(blank=True, to='booking.HotelOption', verbose_name='Hotel Options'),
        ),
        migrations.AddField(
            model_name='hotel',
            name='payment_method',
            field=models.ManyToManyField(blank=True, to='booking.PaymentMethod', verbose_name='Payment methods'),
        ),
        migrations.AddField(
            model_name='discount',
            name='hotel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Hotel', verbose_name='Hotel'),
        ),
        migrations.AddField(
            model_name='booking',
            name='hotel',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='booking.Hotel', verbose_name='Hotel'),
        ),
        migrations.AddField(
            model_name='booking',
            name='payment_method',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='booking.PaymentMethod', verbose_name='Payment method'),
        ),
        migrations.AddField(
            model_name='booking',
            name='settlement',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='booking.SettlementVariant', verbose_name='Settlement Variant'),
        ),
        migrations.AddField(
            model_name='booking',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='availability',
            name='room',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='booking.Room', verbose_name='Room'),
        ),
        migrations.AddField(
            model_name='agentpercent',
            name='hotel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Hotel'),
        ),
    ]
