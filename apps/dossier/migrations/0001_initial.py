# -*- coding: utf-8 -*-
# Generated by Django 1.10.dev20160517112445 on 2016-05-17 09:22
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import nnmware.core.abstract


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActorCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='Category of actor')),
            ],
            options={
                'verbose_name_plural': 'Categories of actors',
                'verbose_name': 'Category of actor',
            },
        ),
        migrations.CreateModel(
            name='Animal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Animals',
                'verbose_name': 'Animal',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='AnimalKind',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
            ],
            options={
                'verbose_name_plural': 'Animals kinds',
                'verbose_name': 'Animal kind',
            },
        ),
        migrations.CreateModel(
            name='AnimalType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Animals types',
                'verbose_name': 'Animal type',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='BodyModification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Modification',
                'verbose_name': 'Modification',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='ChestSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('international', models.CharField(blank=True, default='', max_length=255, verbose_name='International')),
                ('russian', models.PositiveSmallIntegerField(blank=True, default=None, null=True, verbose_name='Russian size')),
            ],
            options={
                'verbose_name_plural': 'Chest sizes',
                'verbose_name': 'Chest size',
            },
        ),
        migrations.CreateModel(
            name='Child',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
                ('birthdate', models.DateField(blank=True, null=True, verbose_name='Date birth')),
                ('gender', models.CharField(blank=True, choices=[('F', 'Female'), ('M', 'Male'), ('N', 'None')], max_length=1, verbose_name='Gender')),
                ('twins', models.BooleanField(default=False, verbose_name='Twins')),
            ],
            options={
                'verbose_name_plural': 'Children',
                'verbose_name': 'Child',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='ClothingSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('international', models.CharField(blank=True, default='', max_length=255, verbose_name='International')),
                ('russian', models.PositiveSmallIntegerField(blank=True, default=None, null=True, verbose_name='Russian size')),
                ('eu', models.PositiveSmallIntegerField(blank=True, default=None, null=True, verbose_name='EU size')),
                ('uk', models.PositiveSmallIntegerField(blank=True, default=None, null=True, verbose_name='UK size')),
                ('us', models.PositiveSmallIntegerField(blank=True, default=None, null=True, verbose_name='US size')),
                ('dest', models.PositiveSmallIntegerField(choices=[(0, 'Unknown'), (1, 'Child'), (2, 'Woman'), (3, 'Man')], default=0, verbose_name='Size for')),
            ],
            options={
                'verbose_name_plural': 'Clothing sizes',
                'verbose_name': 'Clothing size',
            },
        ),
        migrations.CreateModel(
            name='CreativeActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='Creative activity')),
            ],
            options={
                'verbose_name_plural': 'Creative activities',
                'verbose_name': 'Creative activity',
            },
        ),
        migrations.CreateModel(
            name='DanceSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
                ('level', models.IntegerField(blank=True, choices=[(0, 'Unknown'), (1, 'Fan'), (2, 'Pro')], default=0, null=True, verbose_name='Level')),
            ],
            options={
                'verbose_name_plural': 'Dance skills',
                'verbose_name': 'Dance skill',
            },
        ),
        migrations.CreateModel(
            name='DriveSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
                ('level', models.IntegerField(blank=True, choices=[(0, 'Unknown'), (1, 'Fan'), (2, 'Pro')], default=0, null=True, verbose_name='Level')),
            ],
            options={
                'verbose_name_plural': 'Driving skills',
                'verbose_name': 'Driving skill',
            },
        ),
        migrations.CreateModel(
            name='EyeColor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='Eye color')),
            ],
            options={
                'verbose_name_plural': 'Eyes colors',
                'verbose_name': 'Eye color',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FeatureAppearance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Feature Appearance',
                'verbose_name': 'Feature Appearance',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='HairColor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='Hair color')),
            ],
            options={
                'verbose_name_plural': 'Hair colors',
                'verbose_name': 'Hair color',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HairLength',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='Length of hair')),
            ],
            options={
                'verbose_name_plural': 'Length of hair',
                'verbose_name': 'Length of hair',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HairTexture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='Texture of hair')),
            ],
            options={
                'verbose_name_plural': 'Textures of hair',
                'verbose_name': 'Texture of hair',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HeadSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('international', models.CharField(blank=True, default='', max_length=255, verbose_name='International')),
                ('russian', models.PositiveSmallIntegerField(blank=True, default=None, null=True, verbose_name='Russian size')),
                ('dest', models.PositiveSmallIntegerField(choices=[(0, 'Unknown'), (1, 'Child'), (2, 'Woman'), (3, 'Man')], default=0, verbose_name='Size for')),
            ],
            options={
                'verbose_name_plural': 'Head sizes',
                'verbose_name': 'Head size',
            },
        ),
        migrations.CreateModel(
            name='LanguageSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(blank=True, choices=[(0, 'Unknown'), (1, 'Base'), (2, 'Conversational')], default=0, null=True, verbose_name='Level')),
            ],
            options={
                'verbose_name_plural': 'Language skills',
                'verbose_name': 'Language skill',
            },
        ),
        migrations.CreateModel(
            name='LanguageSpeak',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Languages',
                'verbose_name': 'Language',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='MusicSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
                ('level', models.IntegerField(blank=True, choices=[(0, 'Unknown'), (1, 'Fan'), (2, 'Pro')], default=0, null=True, verbose_name='Level')),
            ],
            options={
                'verbose_name_plural': 'Music skills',
                'verbose_name': 'Music skill',
            },
        ),
        migrations.CreateModel(
            name='OtherSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
                ('level', models.IntegerField(blank=True, choices=[(0, 'Unknown'), (1, 'Fan'), (2, 'Pro')], default=0, null=True, verbose_name='Level')),
            ],
            options={
                'verbose_name_plural': 'Other skills',
                'verbose_name': 'Other skill',
            },
        ),
        migrations.CreateModel(
            name='ReadinessScene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='Readiness in scene')),
            ],
            options={
                'verbose_name_plural': 'Readiness in scenes',
                'verbose_name': 'Readiness in scene',
            },
        ),
        migrations.CreateModel(
            name='Requisite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Requisites',
                'verbose_name': 'Requisite',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='RequisiteType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Requisite types',
                'verbose_name': 'Requisite type',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='ShoesSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cm', models.DecimalField(decimal_places=1, default=0, max_digits=5, verbose_name='Centimeters')),
                ('ru', models.DecimalField(decimal_places=1, default=0, max_digits=5, verbose_name='Russian')),
                ('eu', models.DecimalField(decimal_places=1, default=0, max_digits=5, verbose_name='Europe')),
                ('us', models.DecimalField(decimal_places=1, default=0, max_digits=5, verbose_name='USA')),
                ('dest', models.PositiveSmallIntegerField(choices=[(0, 'Unknown'), (1, 'Child'), (2, 'Woman'), (3, 'Man')], default=0, verbose_name='Size for')),
            ],
            options={
                'verbose_name_plural': 'Shoes sizes',
                'verbose_name': 'Shoes size',
            },
        ),
        migrations.CreateModel(
            name='SkinColor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='Skin color')),
            ],
            options={
                'verbose_name_plural': 'Colors of skin',
                'verbose_name': 'Color of skin',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SpecialSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
                ('level', models.IntegerField(blank=True, choices=[(0, 'Unknown'), (1, 'Fan'), (2, 'Pro')], default=0, null=True, verbose_name='Level')),
            ],
            options={
                'verbose_name_plural': 'Special skills',
                'verbose_name': 'Special skill',
            },
        ),
        migrations.CreateModel(
            name='SpokenDialect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Spoken dialects',
                'verbose_name': 'Spoken dialect',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='SportSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
                ('level', models.IntegerField(blank=True, choices=[(0, 'Unknown'), (1, 'Fan'), (2, 'Pro')], default=0, null=True, verbose_name='Level')),
            ],
            options={
                'verbose_name_plural': 'Sport skills',
                'verbose_name': 'Sport skill',
            },
        ),
        migrations.CreateModel(
            name='SurveyObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Survey objects',
                'verbose_name': 'Survey object',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='SurveyObjectType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Survey object types',
                'verbose_name': 'Survey object type',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='SurveySuit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Survey suits',
                'verbose_name': 'Survey suit',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='SurveySuitType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
                ('overall', models.BooleanField(default=False, verbose_name='Overall')),
            ],
            options={
                'verbose_name_plural': 'Survey suits types',
                'verbose_name': 'Survey suit type',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='TransportMark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
            ],
            options={
                'verbose_name_plural': 'Transport mark',
                'verbose_name': 'Transport mark',
            },
        ),
        migrations.CreateModel(
            name='TransportType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Transport types',
                'verbose_name': 'Transport type',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='TypeAppearanceHuman',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='Type of appearance')),
            ],
            options={
                'verbose_name_plural': 'Types of appearance',
                'verbose_name': 'Type of appearance',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TypeBodyHuman',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='Body Type')),
            ],
            options={
                'verbose_name_plural': 'Body Types',
                'verbose_name': 'Body Type',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TypeBodyModification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='Type body modification')),
            ],
            options={
                'verbose_name_plural': 'Types body modifications',
                'verbose_name': 'Type body modification',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TypeBrightAppearance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='Type on bright appearance')),
            ],
            options={
                'verbose_name_plural': 'Types on bright appearance',
                'verbose_name': 'Type on bright appearance',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TypeDance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Types of dances',
                'verbose_name': 'Type of dance',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='TypeDrive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Types of drivings',
                'verbose_name': 'Type of driving',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='TypeFeatureAppearance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='Feature of appearance')),
            ],
            options={
                'verbose_name_plural': 'Feature appearances types',
                'verbose_name': 'Feature appearance type',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TypeHistorical',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='Type in historical projects')),
            ],
            options={
                'verbose_name_plural': 'Types in historical projects',
                'verbose_name': 'Type in historical projects',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TypeLifestyle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='Type on lifestyle')),
            ],
            options={
                'verbose_name_plural': 'Types on lifestyle',
                'verbose_name': 'Type on lifestyle',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TypeMusicInstrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Types of music instruments',
                'verbose_name': 'Type of music instrument',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='TypeNational',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='Type on national sign')),
            ],
            options={
                'verbose_name_plural': 'Types on national sign',
                'verbose_name': 'Type on national sign',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TypeNationalHuman',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='National Type')),
            ],
            options={
                'verbose_name_plural': 'National Types',
                'verbose_name': 'National Type',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TypeOtherSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Types of other skills',
                'verbose_name': 'Type of other skill',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='TypeProfession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='Type on profession')),
            ],
            options={
                'verbose_name_plural': 'Types on profession',
                'verbose_name': 'Type on profession',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TypeSpecialSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Types of special skill',
                'verbose_name': 'Type of special skill',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='TypeSport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Types of sport',
                'verbose_name': 'Type of sport',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='TypeSurvey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='Type of survey')),
            ],
            options={
                'verbose_name_plural': 'Types of surveys',
                'verbose_name': 'Type of survey',
            },
        ),
        migrations.CreateModel(
            name='TypeVocal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Types of vocals',
                'verbose_name': 'Type of vocal',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('name', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='Name(English')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='Enabled in system')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='Description(English)')),
                ('slug', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='URL-identifier')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('docs', models.IntegerField(blank=True, null=True)),
                ('pics', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
                ('tmark', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='m_vehicles', to='dossier.TransportMark', verbose_name='Mark')),
                ('ttype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='t_vehicles', to='dossier.TransportType', verbose_name='Transport')),
            ],
            options={
                'verbose_name_plural': 'Vehicles',
                'verbose_name': 'Vehicle',
            },
            bases=(models.Model, nnmware.core.abstract.PicsMixin),
        ),
        migrations.CreateModel(
            name='VocalSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, height_field='img_height', max_length=1024, upload_to='img/%Y/%m/%d/', verbose_name='Image', width_field='img_width')),
                ('img_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('img_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image height')),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, default=0, verbose_name='Priority')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='English name')),
                ('level', models.IntegerField(blank=True, choices=[(0, 'Unknown'), (1, 'Fan'), (2, 'Pro')], default=0, null=True, verbose_name='Level')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vocal_skill', to='dossier.TypeVocal', verbose_name='Vocal type')),
            ],
            options={
                'verbose_name_plural': 'Vocal skills',
                'verbose_name': 'Vocal skill',
            },
        ),
        migrations.AddField(
            model_name='transportmark',
            name='ttype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tmarks', to='dossier.TransportType', verbose_name='Transport'),
        ),
        migrations.AddField(
            model_name='surveysuit',
            name='stype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='t_s_o', to='dossier.SurveySuitType', verbose_name='Type'),
        ),
        migrations.AddField(
            model_name='surveyobject',
            name='stype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='t_s_o', to='dossier.SurveyObjectType', verbose_name='Type'),
        ),
        migrations.AddField(
            model_name='sportskill',
            name='skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sport_skill', to='dossier.TypeSport', verbose_name='Type of sport'),
        ),
        migrations.AddField(
            model_name='specialskill',
            name='skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='special_skill', to='dossier.TypeSpecialSkill', verbose_name='Type of special skill'),
        ),
        migrations.AddField(
            model_name='requisite',
            name='rtype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dossier.RequisiteType', verbose_name='Type'),
        ),
        migrations.AddField(
            model_name='otherskill',
            name='skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='other_skill', to='dossier.TypeOtherSkill', verbose_name='Type of other skill'),
        ),
        migrations.AddField(
            model_name='musicskill',
            name='skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_skill', to='dossier.TypeMusicInstrument', verbose_name='Music instrument type'),
        ),
        migrations.AddField(
            model_name='languageskill',
            name='speak',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='language_skill', to='dossier.LanguageSpeak', verbose_name='Language speak'),
        ),
        migrations.AddField(
            model_name='featureappearance',
            name='appearance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feature_app', to='dossier.TypeFeatureAppearance', verbose_name='Feature appearance'),
        ),
        migrations.AddField(
            model_name='driveskill',
            name='skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drive_skill', to='dossier.TypeDrive', verbose_name='Type of driving'),
        ),
        migrations.AddField(
            model_name='danceskill',
            name='skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dance_skill', to='dossier.TypeDance', verbose_name='Dance type'),
        ),
        migrations.AddField(
            model_name='bodymodification',
            name='modification',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modifications', to='dossier.TypeBodyModification', verbose_name='Modification'),
        ),
        migrations.AddField(
            model_name='animalkind',
            name='animal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kind', to='dossier.AnimalType', verbose_name='Animal'),
        ),
        migrations.AddField(
            model_name='animal',
            name='animal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='animals', to='dossier.AnimalType', verbose_name='Animal'),
        ),
        migrations.AddField(
            model_name='animal',
            name='animalkind',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='kind', to='dossier.AnimalKind', verbose_name='Kind'),
        ),
    ]
